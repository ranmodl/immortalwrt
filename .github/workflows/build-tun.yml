name: Build Redmi AX3000 with TUN (Manual Config Fix)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 300
    env:
      CACHE_DIR: "/home/runner/.cache/immortalwrt"
      # 官方IPQ50xx配置文件的URL（从ImmortalWrt官方仓库获取）
      IPQ50XX_CONFIG_URL: "https://raw.githubusercontent.com/immortalwrt/immortalwrt/main/target/linux/qualcommax/ipq50xx/image/Makefile"
      TARGET_PATH: "target/linux/qualcommax/ipq50xx/image"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 1

      - name: Free up disk space
        run: |
          sudo apt-get autoremove -y && sudo apt-get clean -y
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo rm -rf /var/lib/apt/lists/* /var/cache/apt/*
          mkdir -p $CACHE_DIR && ln -s $CACHE_DIR dl

      - name: 🔧 手动下载IPQ50xx配置文件（关键修复）
        run: |
          # 创建目标目录（若不存在）
          mkdir -p $TARGET_PATH
          
          # 从官方仓库下载缺失的Makefile
          echo "从官方仓库下载IPQ50xx配置文件..."
          wget -O "$TARGET_PATH/Makefile" $IPQ50XX_CONFIG_URL
          
          # 验证文件是否下载成功
          if [ ! -f "$TARGET_PATH/Makefile" ]; then
            echo "ERROR: 下载配置文件失败，请检查URL是否有效！"
            exit 1
          else
            echo "✅ 成功补充IPQ50xx镜像配置文件"
            # 显示文件内容前几行，确认正确
            head -n 5 "$TARGET_PATH/Makefile"
          fi

      - name: Initialize environment
        run: |
          sudo bash -c 'bash <(curl -s https://build-scripts.immortalwrt.org/init_build_environment.sh)'
          ./scripts/feeds update -a -q && ./scripts/feeds install -a -q

      - name: Configure firmware (Enable TUN)
        run: |
          make defconfig
          # 启用TUN支持
          echo "CONFIG_KERNEL_TUN=y" >> .config
          echo "CONFIG_KERNEL_TUN_VNET_CROSS_LE=y" >> .config
          echo "CONFIG_PACKAGE_kmod-tun=y" >> .config
          # 禁用冗余功能
          echo "# CONFIG_PACKAGE_luci is not set" >> .config
          make defconfig

      - name: Compile core components
        run: |
          make -j$(nproc) 2>&1 | tee -a compile-error.log

      - name: Generate firmware (with debug log)
        run: |
          make image -j1 V=s 2>&1 | tee image-build.log

      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: redmi-ax3000-firmware
          path: |
            bin/targets/qualcommax/ipq50xx/*.bin
            bin/targets/qualcommax/ipq50xx/*.ubi
            compile-error.log
            image-build.log
          retention-days: 30
