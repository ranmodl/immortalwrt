name: Build TUN support for Redmi AX3000

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 180  # 延长超时时间，完整编译需要更久

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        repository: immortalwrt/immortalwrt
        ref: openwrt-24.10
        submodules: true

    - name: Setup build environment
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential clang flex bison g++ gawk \
        gettext git libncurses5-dev libssl-dev python3 python3-dev \
        rsync unzip zlib1g-dev file wget

    - name: Configure for device
      run: |
        echo "CONFIG_TARGET_qualcommax=y" > .config
        echo "CONFIG_TARGET_qualcommax_ipq50xx=y" >> .config
        echo "CONFIG_TARGET_qualcommax_ipq50xx_DEVICE_redmi_ax3000=y" >> .config
        echo "CONFIG_KERNEL_TUN=y" >> .config
        # 添加基本LuCI界面支持（可选，根据需要调整）
        echo "CONFIG_PACKAGE_luci=y" >> .config
        echo "CONFIG_PACKAGE_luci-ssl=y" >> .config
        make defconfig

    - name: Verify TUN configuration
      run: |
        echo "=== 检查 TUN 配置 ==="
        find target/linux -name "config-*" -exec grep -l "CONFIG_TUN" {} \; | head -3
        find target/linux -name "config-*" -exec grep -h "CONFIG_TUN" {} \; | head -5
        grep "TUN" .config || echo "在 .config 中未找到 TUN 配置"

    - name: Build toolchain
      run: |
        echo "=== 编译工具链 ==="
        make toolchain/install -j$(nproc) V=s

    - name: Build kernel
      run: |
        echo "=== 编译内核 ==="
        make target/compile -j$(nproc) V=s 2>&1 | tail -50

    - name: Build packages
      run: |
        echo "=== 编译软件包 ==="
        make package/compile -j$(nproc) V=s 2>&1 | tail -50

    - name: Build full firmware image
      run: |
        echo "=== 生成完整固件镜像 ==="
        make image -j$(nproc) V=s 2>&1 | tail -100

    - name: Locate firmware files
      run: |
        echo "=== 定位固件文件 ==="
        FIRMWARE_DIR="bin/targets/qualcommax/ipq50xx"
        if [ -d "$FIRMWARE_DIR" ]; then
          echo "固件目录存在: $FIRMWARE_DIR"
          ls -l "$FIRMWARE_DIR"
          # 查找所有可能的固件文件
          find "$FIRMWARE_DIR" -name "*.bin" -o -name "*.ubi"
        else
          echo "固件目录不存在，搜索整个bin目录"
          find bin/ -name "*.bin" -o -name "*.ubi"
        fi

    - name: Check TUN integration
      run: |
        echo "=== 验证TUN集成状态 ==="
        KERNEL_BIN=$(find bin/targets/ -name "vmlinux" -o -name "zImage" | head -1)
        if [ -n "$KERNEL_BIN" ]; then
          echo "检查内核二进制文件: $KERNEL_BIN"
          strings "$KERNEL_BIN" | grep -i "tun" | head -10
        else
          echo "未找到内核二进制文件"
        fi

    - name: Upload firmware artifacts
      uses: actions/upload-artifact@v4
      with:
        name: redmi-ax3000-tun-firmware
        path: |
          bin/targets/qualcommax/ipq50xx/*.bin
          bin/targets/qualcommax/ipq50xx/*.ubi
          bin/targets/qualcommax/ipq50xx/*.tar.gz
        if-no-files-found: error  # 固件必须生成，否则报错
