name: Compile TUN module for Redmi AX3000

on:
  workflow_dispatch:  # 允许手动触发

jobs:
  compile:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Set up environment
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
        gettext git libncurses5-dev libssl-dev python3-full python3-dev rsync unzip zlib1g-dev \
        file wget zstd

    - name: Update feeds
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Configure for Redmi AX3000 with TUN
      run: |
        echo "CONFIG_TARGET_qualcommax=y" > .config
        echo "CONFIG_TARGET_qualcommax_ipq50xx=y" >> .config
        echo "CONFIG_TARGET_qualcommax_ipq50xx_DEVICE_redmi_ax3000=y" >> .config
        
        # 启用 TUN 支持！
        echo "CONFIG_PACKAGE_kmod-tun=y" >> .config
        echo "CONFIG_KERNEL_TUN=y" >> .config
        
        make defconfig

    - name: Verify TUN configuration
      run: |
        echo "=== 检查 TUN 配置是否已启用 ==="
        grep "CONFIG_PACKAGE_kmod-tun" .config
        grep "CONFIG_KERNEL_TUN" .config

    - name: Build toolchain first
      run: |
        make toolchain/install -j$(nproc)

    - name: Build target
      run: |
        make target/compile -j$(nproc)

    - name: Build kmod-tun package
      run: |
        make package/kmod-tun/compile -j$(nproc) V=s

    - name: Find and upload kmod-tun package
      uses: actions/upload-artifact@v4
      with:
        name: kmod-tun-package
        path: |
          bin/targets/qualcommax/ipq50xx/packages/kmod-tun*.ipk
          bin/packages/arm_cortex-a7/kernel/kmod-tun*.ipk
          build_dir/target-*/kmod-tun-*/ipkg-*/kmod-tun*.ipk
        if-no-files-found: warn
