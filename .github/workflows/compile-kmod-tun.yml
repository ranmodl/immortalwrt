name: Compile TUN module for Redmi AX3000

on:
  workflow_dispatch:

jobs:
  compile:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
    - name: Checkout the exact repository
      uses: actions/checkout@v4
      with:
        repository: kmiit/Redmi_AX3000_immortalwrt
        submodules: true

    - name: Setup build environment
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential clang flex bison g++ gawk \
        gettext git libncurses5-dev libssl-dev python3-full python3-dev \
        rsync unzip zlib1g-dev file wget zstd

    - name: Update and install feeds
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Find the correct TUN package name
      run: |
        echo "=== 搜索所有包含 tun 的包 ==="
        find . -name "*.mk" -exec grep -l "tun\|TUN" {} \; | head -10
        echo ""
        echo "=== 在 feeds 中搜索 tun 相关包 ==="
        ./scripts/feeds list | grep -i tun | head -10
        echo ""
        echo "=== 在内核包目录中搜索 ==="
        find package/kernel/ -name "*" -type f | grep -i tun | head -10 || true
        echo ""
        echo "=== 查看内核模块配置 ==="
        find . -name "config-*" -exec grep -l "tun\|TUN" {} \; | head -3
        find . -name "config-*" -exec grep -h "CONFIG_TUN" {} \; | head -5 || true

    - name: Configure for Redmi AX3000
      run: |
        echo "CONFIG_TARGET_qualcommax=y" > .config
        echo "CONFIG_TARGET_qualcommax_ipq50xx=y" >> .config
        echo "CONFIG_TARGET_qualcommax_ipq50xx_DEVICE_redmi_ax3000=y" >> .config
        # 先不指定具体包，让 defconfig 自动配置
        make defconfig

    - name: Check available kernel modules
      run: |
        echo "=== 可用的内核模块包 ==="
        grep "CONFIG_PACKAGE_kmod-" .config | grep -i tun | head -10 || echo "没有找到 TUN 相关内核模块"
        echo ""
        echo "=== 所有内核模块配置 ==="
        grep "CONFIG_PACKAGE_kmod-" .config | head -20

    - name: Build toolchain and kernel first
      run: |
        make toolchain/install -j$(nproc)
        make target/compile -j$(nproc)
        make package/kernel/linux/compile -j$(nproc)

    - name: Try to find and build TUN module
      run: |
        echo "=== 尝试编译所有内核模块 ==="
        # 先查看有哪些内核模块可以编译
        find package/ -name "Makefile" -exec grep -l "tun\|TUN" {} \; | head -5
        
        # 尝试编译可能的相关包
        make package/kernel/linux/compile -j$(nproc) V=s 2>&1 | grep -A 5 -B 5 "tun\|TUN" || echo "编译过程中未找到 TUN 相关输出"

    - name: Search for any built modules
      run: |
        echo "=== 搜索所有已编译的模块 ==="
        find . -name "*.ko" | grep -i tun | head -10 || echo "未找到 TUN 相关模块"
        find . -name "*.ipk" | head -10 || echo "未找到任何 IPK 文件"
