name: Build kmod-tun for Redmi AX3000

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        repository: immortalwrt/immortalwrt
        ref: openwrt-24.10
        submodules: true

    - name: Setup build environment
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential clang flex bison g++ gawk \
        gettext git libncurses5-dev libssl-dev python3 python3-dev \
        rsync unzip zlib1g-dev file wget

    - name: Simple configuration
      run: |
        # 最简单配置
        echo "CONFIG_TARGET_qualcommax=y" > .config
        echo "CONFIG_TARGET_qualcommax_ipq50xx=y" >> .config
        echo "CONFIG_PACKAGE_kmod-tun=y" >> .config
        make defconfig

    - name: Download required sources
      run: |
        make package/kmod-tun/download V=s

    - name: Build kmod-tun with debug
      run: |
        echo "=== 开始编译 kmod-tun ==="
        # 详细编译输出
        make package/kmod-tun/compile V=s 2>&1 | head -100
        echo "=== 编译完成 ==="

    - name: Search for package
      run: |
        echo "=== 搜索编译好的包 ==="
        # 在所有可能的位置搜索
        find . -name "*.ipk" | grep -i kmod-tun || find . -name "*.ipk" | head -5
        echo "=== 构建目录 ==="
        find build_dir/ -name "kmod-tun*" -type d | head -3
        find build_dir/ -name "*.ipk" | head -3

    - name: Manual package creation
      run: |
        echo "=== 手动检查 ==="
        # 检查是否编译了模块文件
        find . -name "tun.ko" | head -3
        find . -name "*.ko" | grep -i tun | head -3
        
        # 如果找到模块，尝试手动创建包
        if find . -name "tun.ko" | grep -q .; then
          echo "找到 tun.ko 模块"
          TUN_KO=$(find . -name "tun.ko" | head -1)
          echo "模块位置: $TUN_KO"
        fi
