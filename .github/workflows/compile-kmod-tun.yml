name: Enable TUN in Kernel for Redmi AX3000

on:
  workflow_dispatch:

jobs:
  compile:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
    - name: Checkout the exact repository
      uses: actions/checkout@v4
      with:
        repository: kmiit/Redmi_AX3000_immortalwrt
        submodules: true

    - name: Setup build environment
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential clang flex bison g++ gawk \
        gettext git libncurses5-dev libssl-dev python3-full python3-dev \
        rsync unzip zlib1g-dev file wget zstd

    - name: Update and install feeds
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Configure for Redmi AX3000 with TUN enabled
      run: |
        echo "CONFIG_TARGET_qualcommax=y" > .config
        echo "CONFIG_TARGET_qualcommax_ipq50xx=y" >> .config
        echo "CONFIG_TARGET_qualcommax_ipq50xx_DEVICE_redmi_ax3000=y" >> .config
        
        # 启用内核中的 TUN 支持
        echo "CONFIG_KERNEL_TUN=y" >> .config
        echo "CONFIG_KERNEL_TUN_VNET_CROSS_LE=y" >> .config
        
        make defconfig

    - name: Verify TUN is enabled in kernel
      run: |
        echo "=== 检查内核 TUN 配置 ==="
        grep "CONFIG_KERNEL_TUN" .config || echo "TUN 配置未找到"
        grep "CONFIG_TUN" .config || echo "直接 TUN 配置未找到"
        echo "=== 完整的内核网络配置 ==="
        grep "CONFIG_KERNEL_NET" .config | head -10

    - name: Download all sources
      run: make download -j$(nproc)

    - name: Build toolchain
      run: make toolchain/install -j$(nproc) V=s

    - name: Build kernel with TUN support
      run: |
        make target/compile -j$(nproc) V=s
        make package/kernel/linux/compile -j$(nproc) V=s

    - name: Build complete firmware with TUN
      run: |
        make -j$(nproc) V=s 2>&1 | grep -A 10 -B 10 "tun\|TUN" || echo "编译日志中未找到 TUN 相关信息"

    - name: Find the built firmware
      run: |
        echo "=== 生成的固件文件 ==="
        find bin/ -name "*.bin" -o -name "*.itb" -o -name "*.ubi" | head -10
        echo "=== 内核模块文件 ==="
        find build_dir/ -name "tun.ko" -o -name "*tun*" | head -5 || echo "未找到 TUN 模块"

    - name: Upload firmware with TUN support
      uses: actions/upload-artifact@v4
      with:
        name: firmware-with-tun-support
        path: |
          bin/targets/qualcommax/ipq50xx/*.bin
          bin/targets/qualcommax/ipq50xx/*.itb
          bin/targets/qualcommax/ipq50xx/*.ubi
        if-no-files-found: error
